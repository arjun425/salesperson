{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/redaj/my-next-website/src/app/scan/update/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { \r\n  collection, \r\n  addDoc, \r\n  updateDoc, \r\n  deleteDoc, \r\n  doc, \r\n  onSnapshot \r\n} from \"firebase/firestore\";\r\nimport { db } from \"@/firebase/firebase\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function InventoryPage() {\r\n  const [items, setItems] = useState([]);\r\n  const [newItemProductName, setNewItemProductName] = useState(\"\");\r\n  const [newItemBarcode, setNewItemBarcode] = useState(\"\");\r\n  const [newItemPricePerUnit, setNewItemPricePerUnit] = useState(\"\");\r\n  const [newItemQuantity, setNewItemQuantity] = useState(\"\");\r\n  const [addItemWarning, setAddItemWarning] = useState(\"\");\r\n  \r\n  // Maintain a sell quantity for each item\r\n  const [sellQuantities, setSellQuantities] = useState({});\r\n\r\n  // Subscribe to real-time updates\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(\r\n      collection(db, \"inventory\"),\r\n      (snapshot) => {\r\n        const itemsArray = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setItems(itemsArray);\r\n      },\r\n      (error) => {\r\n        toast.error(\"Error fetching items: \" + error.message);\r\n      }\r\n    );\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleAddItem = async () => {\r\n    // Validate all fields are entered\r\n    if (\r\n      !newItemProductName.trim() ||\r\n      !newItemBarcode.trim() ||\r\n      !newItemPricePerUnit ||\r\n      !newItemQuantity\r\n    ) {\r\n      setAddItemWarning(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n    setAddItemWarning(\"\");\r\n    try {\r\n      await addDoc(collection(db, \"inventory\"), {\r\n        productName: newItemProductName,\r\n        barcode: newItemBarcode,\r\n        \"price per unit\": parseFloat(newItemPricePerUnit),\r\n        quantity: parseInt(newItemQuantity)\r\n      });\r\n      setNewItemProductName(\"\");\r\n      setNewItemBarcode(\"\");\r\n      setNewItemPricePerUnit(\"\");\r\n      setNewItemQuantity(\"\");\r\n      toast.success(\"Item added successfully!\");\r\n    } catch (error) {\r\n      toast.error(\"Error adding item: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const handleSellItem = async (id, currentQuantity, saleQuantityInput) => {\r\n    const saleQuantity = parseInt(saleQuantityInput, 10);\r\n    if (isNaN(saleQuantity) || saleQuantity <= 0) {\r\n      toast.error(\"Enter a valid sale quantity greater than 0.\");\r\n      return;\r\n    }\r\n    if (saleQuantity > currentQuantity) {\r\n      toast.error(\"Cannot sell more than available quantity.\");\r\n      return;\r\n    }\r\n    try {\r\n      if (saleQuantity === currentQuantity) {\r\n        await deleteDoc(doc(db, \"inventory\", id));\r\n        toast.info(\"Item sold out and removed from inventory\");\r\n      } else {\r\n        const itemRef = doc(db, \"inventory\", id);\r\n        await updateDoc(itemRef, { quantity: currentQuantity - saleQuantity });\r\n        toast.info(\"Item sold! Quantity updated\");\r\n      }\r\n      // Reset sell quantity for the item to default (1)\r\n      setSellQuantities(prev => ({ ...prev, [id]: 1 }));\r\n    } catch (error) {\r\n      toast.error(\"Error updating item: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const handleInlineEdit = async (id, field, value) => {\r\n    try {\r\n      const itemRef = doc(db, \"inventory\", id);\r\n      // Determine value type based on the field\r\n      const updateValue =\r\n        field === \"price per unit\" ? parseFloat(value) : parseInt(value);\r\n      await updateDoc(itemRef, { [field]: updateValue });\r\n      toast.success(\"Item updated successfully!\");\r\n    } catch (error) {\r\n      toast.error(\"Error updating item: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative min-h-screen bg-blue-100\">\r\n      {/* Background Image with Blur */}\r\n      <div \r\n        className=\"absolute inset-0 bg-cover bg-center filter blur-lg\"\r\n        style={{ backgroundImage: \"url('/inventory.jpg')\" }}\r\n      />\r\n\r\n      {/* Content Container */}\r\n      <div className=\"relative p-4\">\r\n        {/* Header */}\r\n        <header className=\"flex items-center justify-center p-4 bg-gray-300 rounded-md mb-6\">\r\n          <img src=\"/logo.png\" alt=\"Logo\" className=\"h-10 w-10 mr-4\" />\r\n          <h1 \r\n            className=\"text-3xl font-bold uppercase\" \r\n            style={{ fontFamily: 'Avro, sans-serif' }}\r\n          >\r\n            YOUR INVENTORY\r\n          </h1>\r\n        </header>\r\n\r\n        {/* Add Item Form */}\r\n        <div className=\"mb-6 bg-gray-300 p-4 rounded-lg shadow-md\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Product Name\"\r\n              value={newItemProductName}\r\n              onChange={(e) => setNewItemProductName(e.target.value)}\r\n              className=\"p-2 border rounded\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Barcode\"\r\n              value={newItemBarcode}\r\n              onChange={(e) => setNewItemBarcode(e.target.value)}\r\n              className=\"p-2 border rounded\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Price Per Unit\"\r\n              value={newItemPricePerUnit}\r\n              onChange={(e) => setNewItemPricePerUnit(e.target.value)}\r\n              className=\"p-2 border rounded\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Quantity\"\r\n              value={newItemQuantity}\r\n              onChange={(e) => setNewItemQuantity(e.target.value)}\r\n              className=\"p-2 border rounded\"\r\n            />\r\n          </div>\r\n          <div className=\"mt-2 flex flex-col items-start\">\r\n            <button \r\n              onClick={handleAddItem}\r\n              className=\"mt-4 px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Add New Item\r\n            </button>\r\n            {addItemWarning && (\r\n              <span className=\"mt-2 text-red-600 text-sm\">{addItemWarning}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Inventory Table */}\r\n        <div className=\"bg-gray-300 rounded-lg shadow overflow-hidden\">\r\n          <table className=\"min-w-full\">\r\n            <thead className=\"bg-gray-400\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                  Product Name\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                  Barcode\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                  Price Per Unit\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                  Quantity\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                  Sell Quantity\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-700 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"divide-y divide-gray-200\">\r\n              {items.map((item) => (\r\n                <tr key={item.id} className=\"bg-gray-300\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    {item.productName}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    {item.barcode}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <input\r\n                      type=\"number\"\r\n                      defaultValue={item[\"price per unit\"]}\r\n                      onBlur={(e) =>\r\n                        handleInlineEdit(item.id, \"price per unit\", e.target.value)\r\n                      }\r\n                      className=\"p-1 w-24 text-right border rounded\"\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <input\r\n                      type=\"number\"\r\n                      defaultValue={item.quantity}\r\n                      onBlur={(e) =>\r\n                        handleInlineEdit(item.id, \"quantity\", e.target.value)\r\n                      }\r\n                      className=\"p-1 w-20 text-right border rounded\"\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <input\r\n                      type=\"number\"\r\n                      value={sellQuantities[item.id] || 1}\r\n                      onChange={(e) =>\r\n                        setSellQuantities(prev => ({\r\n                          ...prev,\r\n                          [item.id]: e.target.value\r\n                        }))\r\n                      }\r\n                      className=\"p-1 w-16 text-right border rounded\"\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <button\r\n                      onClick={() =>\r\n                        handleSellItem(item.id, item.quantity, sellQuantities[item.id] || 1)\r\n                      }\r\n                      className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors\"\r\n                    >\r\n                      Sell\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}