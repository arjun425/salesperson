{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/redaj/my-next-website/src/app/scan/update/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getDatabase, ref, set, get } from \"firebase/database\";\r\nimport { firebaseConfig } from \"@/firebase/firebaseConfig\"; // Adjust path if needed\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// Initialize Firebase if not already initialized\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getDatabase(app);\r\n\r\nexport default function ScanUpdatePage() {\r\n  const [barcode, setBarcode] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [scanned, setScanned] = useState(false);\r\n  const [confirmVisible, setConfirmVisible] = useState(false);\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Only initialize scanning if webcam element is available and we haven't scanned yet.\r\n    if (useWebcam() && videoRef.current && !scanned) {\r\n      // Check if getUserMedia is supported\r\n      if (\r\n        !navigator.mediaDevices ||\r\n        typeof navigator.mediaDevices.getUserMedia !== \"function\"\r\n      ) {\r\n        toast.error(\"getUserMedia is not supported. Use HTTPS or localhost.\");\r\n        return;\r\n      }\r\n\r\n      // Load Quagga using require (only on client side)\r\n      let QuaggaModule;\r\n      try {\r\n        QuaggaModule = require(\"quagga\");\r\n      } catch (error) {\r\n        console.error(\"Error loading Quagga:\", error);\r\n        toast.error(\"Failed to load scanner library.\");\r\n        return;\r\n      }\r\n\r\n      if (typeof QuaggaModule.init !== \"function\") {\r\n        console.error(\"Quagga module did not load correctly.\");\r\n        toast.error(\"Quagga module did not load correctly.\");\r\n        return;\r\n      }\r\n\r\n      // Initialize Quagga\r\n      QuaggaModule.init(\r\n        {\r\n          inputStream: {\r\n            type: \"LiveStream\",\r\n            target: videoRef.current,\r\n            constraints: {\r\n              width: 640,\r\n              height: 480,\r\n              facingMode: \"environment\",\r\n            },\r\n          },\r\n          decoder: {\r\n            readers: [\"code_128_reader\", \"ean_reader\", \"ean_8_reader\"],\r\n          },\r\n        },\r\n        (err) => {\r\n          if (err) {\r\n            console.error(\"Quagga init error:\", err);\r\n            toast.error(\"Error initializing scanner: \" + err.message);\r\n            return;\r\n          }\r\n          QuaggaModule.start();\r\n        }\r\n      );\r\n\r\n      // Listen for detected barcodes\r\n      QuaggaModule.onDetected((result) => {\r\n        const code = result.codeResult.code;\r\n        if (!scanned) {\r\n          setBarcode(code);\r\n          setScanned(true);\r\n          QuaggaModule.stop();\r\n          setConfirmVisible(true);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Cleanup function: stop Quagga on unmount\r\n    return () => {\r\n      try {\r\n        const QuaggaModule = require(\"quagga\");\r\n        QuaggaModule.offDetected && QuaggaModule.offDetected();\r\n        QuaggaModule.stop();\r\n      } catch (error) {\r\n        console.error(\"Error during cleanup:\", error);\r\n      }\r\n    };\r\n  }, [scanned]);\r\n\r\n  // Helper: determine if webcam mode is enabled.\r\n  // For this example, we assume that if the user navigated to this page, they want to use the webcam.\r\n  function useWebcam() {\r\n    return true;\r\n  }\r\n\r\n  // Function to handle confirmation and save the product to inventory\r\n  const handleConfirm = async () => {\r\n    if (!barcode || !productName || !quantity) {\r\n      toast.error(\"Please provide barcode, product name, and quantity.\");\r\n      return;\r\n    }\r\n    try {\r\n      const productRef = ref(db, `inventory/${barcode}`);\r\n      // Check if product already exists\r\n      const snapshot = await get(productRef);\r\n      if (snapshot.exists()) {\r\n        const currentQty = snapshot.val().quantity || 0;\r\n        await set(productRef, {\r\n          barcode,\r\n          name: productName,\r\n          quantity: currentQty + parseInt(quantity),\r\n        });\r\n        toast.success(\"Product quantity updated successfully!\");\r\n      } else {\r\n        await set(productRef, {\r\n          barcode,\r\n          name: productName,\r\n          quantity: parseInt(quantity),\r\n        });\r\n        toast.success(\"Product added successfully!\");\r\n      }\r\n      // Reset state for next scan\r\n      setBarcode(\"\");\r\n      setProductName(\"\");\r\n      setQuantity(\"\");\r\n      setScanned(false);\r\n      setConfirmVisible(false);\r\n      // Restart scanner\r\n      try {\r\n        const QuaggaModule = require(\"quagga\");\r\n        QuaggaModule.start();\r\n      } catch (error) {\r\n        console.error(\"Error restarting scanner:\", error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving product:\", error);\r\n      toast.error(\"Error saving product: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center p-4 bg-gray-50\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Scan for Update</h1>\r\n      <div ref={videoRef} className=\"w-80 h-60 bg-black mb-4\" />\r\n      {barcode && <p>Scanned Barcode: {barcode}</p>}\r\n      {confirmVisible && (\r\n        <div className=\"flex flex-col gap-2 mt-4 w-80\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Product Name\"\r\n            value={productName}\r\n            onChange={(e) => setProductName(e.target.value)}\r\n            className=\"p-2 border rounded\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter Quantity\"\r\n            value={quantity}\r\n            onChange={(e) => setQuantity(e.target.value)}\r\n            className=\"p-2 border rounded\"\r\n          />\r\n          <button\r\n            onClick={handleConfirm}\r\n            className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition transform hover:scale-105\"\r\n          >\r\n            Confirm & Save\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}