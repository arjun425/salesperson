{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/redaj/my-next-website/src/app/scan/page.js"],"sourcesContent":["// src/app/scan/page.js\r\n\"use client\";\r\n\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport dynamic from \"next/dynamic\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Dynamically import Quagga so it loads only on the client side\r\nconst Quagga = dynamic(() => import(\"quagga\").then((mod) => mod.default), { ssr: false });\r\n\r\nexport default function ScanPage() {\r\n  const [scannedCode, setScannedCode] = useState(\"\");\r\n  const [useWebcam, setUseWebcam] = useState(false);\r\n  const videoRef = useRef(null);\r\n  const [quaggaLoaded, setQuaggaLoaded] = useState(false);\r\n\r\n  // Load Quagga dynamically using require when webcam scanning is enabled\r\n  useEffect(() => {\r\n    if (useWebcam) {\r\n      try {\r\n        const quagga = require(\"quagga\");\r\n        setQuaggaLoaded(true);\r\n      } catch (error) {\r\n        console.error(\"Error loading Quagga:\", error);\r\n        toast.error(\"Failed to load scanner library.\");\r\n      }\r\n    }\r\n  }, [useWebcam]);\r\n\r\n  // Initialize and start Quagga when it's loaded and webcam is enabled\r\n  useEffect(() => {\r\n    if (useWebcam && quaggaLoaded && videoRef.current) {\r\n      // Check if getUserMedia is available\r\n      if (\r\n        !navigator.mediaDevices ||\r\n        typeof navigator.mediaDevices.getUserMedia !== \"function\"\r\n      ) {\r\n        console.error(\"getUserMedia is not supported in this browser.\");\r\n        toast.error(\"getUserMedia is not supported in this browser.\");\r\n        return;\r\n      }\r\n\r\n      Quagga.init(\r\n        {\r\n          inputStream: {\r\n            name: \"Live\",\r\n            type: \"LiveStream\",\r\n            target: videoRef.current, // The video element for displaying the stream\r\n            constraints: {\r\n              width: 640,\r\n              height: 480,\r\n              facingMode: \"environment\", // Use rear camera if available\r\n            },\r\n          },\r\n          decoder: {\r\n            readers: [\"code_128_reader\", \"ean_reader\", \"ean_8_reader\"],\r\n          },\r\n        },\r\n        (err) => {\r\n          if (err) {\r\n            console.error(\"Quagga init error:\", err);\r\n            toast.error(\"Error initializing scanner: \" + err.message);\r\n            return;\r\n          }\r\n          Quagga.start();\r\n        }\r\n      );\r\n\r\n      // Listen for detected barcodes\r\n      Quagga.onDetected((result) => {\r\n        const code = result.codeResult.code;\r\n        setScannedCode(code);\r\n        toast.success(\"Barcode detected: \" + code);\r\n        // Optionally, stop scanning after a successful detection:\r\n        // Quagga.stop();\r\n      });\r\n\r\n      // Cleanup on unmount or when useWebcam is toggled off\r\n      return () => {\r\n        if (Quagga) {\r\n          Quagga.offDetected();\r\n          Quagga.stop();\r\n        }\r\n      };\r\n    }\r\n  }, [useWebcam, quaggaLoaded]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center p-4 bg-gray-50\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Scan Product</h1>\r\n      <div className=\"mb-4\">\r\n        <label className=\"mr-2\">Use Webcam:</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={useWebcam}\r\n          onChange={(e) => setUseWebcam(e.target.checked)}\r\n        />\r\n      </div>\r\n      {useWebcam ? (\r\n        <div>\r\n          {/* The video element container for Quagga's live stream */}\r\n          <div ref={videoRef} className=\"w-80 h-60 bg-black\" />\r\n          <p className=\"mt-2\">Scanned Barcode: {scannedCode}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {/* Fallback input for keyboard wedge mode */}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Scan input (Keyboard Wedge Mode)\"\r\n            value={scannedCode}\r\n            onChange={(e) => setScannedCode(e.target.value)}\r\n            className=\"p-2 border rounded\"\r\n          />\r\n          <p className=\"mt-2\">Barcode Value: {scannedCode}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}