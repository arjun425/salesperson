{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/redaj/my-next-website/src/app/inventory/page.js"],"sourcesContent":["// src/app/inventory/page.js\r\n\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\r\nimport { db } from \"@/firebase/firebase\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function InventoryPage() {\r\n  const [items, setItems] = useState([]);\r\n  const [newItemName, setNewItemName] = useState(\"\");\r\n  const [newItemQuantity, setNewItemQuantity] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n\r\n  const fetchItems = async () => {\r\n    try {\r\n      const querySnapshot = await getDocs(collection(db, \"inventoryItems\"));\r\n      const itemsArray = [];\r\n      querySnapshot.forEach((document) => {\r\n        itemsArray.push({ id: document.id, ...document.data() });\r\n      });\r\n      // Group items by name (if duplicates exist, sum their quantities)\r\n      const grouped = {};\r\n      itemsArray.forEach((item) => {\r\n        if (grouped[item.name]) {\r\n          grouped[item.name].quantity += item.quantity;\r\n        } else {\r\n          grouped[item.name] = { ...item };\r\n        }\r\n      });\r\n      setItems(Object.values(grouped));\r\n    } catch (error) {\r\n      toast.error(\"Error fetching items: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddItem = async () => {\r\n    if (!newItemName.trim() || !newItemQuantity) return;\r\n    try {\r\n      // Add a new item with name, quantity, and a dummy barcode (to be updated via scanning)\r\n      await addDoc(collection(db, \"inventoryItems\"), {\r\n        name: newItemName,\r\n        quantity: parseInt(newItemQuantity),\r\n        barcode: \"\" // Placeholder â€“ will be updated when scanned\r\n      });\r\n      setNewItemName(\"\");\r\n      setNewItemQuantity(\"\");\r\n      toast.success(\"Item added!\");\r\n      fetchItems();\r\n    } catch (error) {\r\n      toast.error(\"Error adding item: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteItem = async (id, currentQuantity) => {\r\n    // If the quantity is 1 or less, remove the item completely\r\n    if (currentQuantity <= 1) {\r\n      try {\r\n        await deleteDoc(doc(db, \"inventoryItems\", id));\r\n        toast.info(\"Item removed (sold out)\");\r\n        fetchItems();\r\n      } catch (error) {\r\n        toast.error(\"Error deleting item: \" + error.message);\r\n      }\r\n    } else {\r\n      // Otherwise, decrement the quantity by 1 (simulate a sale)\r\n      try {\r\n        const itemRef = doc(db, \"inventoryItems\", id);\r\n        await updateDoc(itemRef, { quantity: currentQuantity - 1 });\r\n        toast.info(\"Item quantity updated\");\r\n        fetchItems();\r\n      } catch (error) {\r\n        toast.error(\"Error updating item: \" + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInlineEdit = async (id, newQuantity) => {\r\n    try {\r\n      const itemRef = doc(db, \"inventoryItems\", id);\r\n      await updateDoc(itemRef, { quantity: parseInt(newQuantity) });\r\n      toast.success(\"Item updated!\");\r\n      fetchItems();\r\n    } catch (error) {\r\n      toast.error(\"Error updating item: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen p-4 bg-gray-100\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Inventory Items</h1>\r\n      <div className=\"mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Item Name\"\r\n          value={newItemName}\r\n          onChange={(e) => setNewItemName(e.target.value)}\r\n          className=\"p-2 border rounded mr-2\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Quantity\"\r\n          value={newItemQuantity}\r\n          onChange={(e) => setNewItemQuantity(e.target.value)}\r\n          className=\"p-2 border rounded mr-2\"\r\n        />\r\n        <button onClick={handleAddItem} className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transform hover:scale-105 transition\">\r\n          Add Item\r\n        </button>\r\n      </div>\r\n      <table className=\"min-w-full bg-white\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"py-2 border\">Name</th>\r\n            <th className=\"py-2 border\">Quantity</th>\r\n            <th className=\"py-2 border\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map((item) => (\r\n            <tr key={item.id} className=\"text-center\">\r\n              <td className=\"py-2 border\">{item.name}</td>\r\n              <td className=\"py-2 border\">\r\n                <input\r\n                  type=\"number\"\r\n                  defaultValue={item.quantity}\r\n                  onBlur={(e) => handleInlineEdit(item.id, e.target.value)}\r\n                  className=\"p-1 text-center border rounded\"\r\n                />\r\n              </td>\r\n              <td className=\"py-2 border\">\r\n                <button\r\n                  onClick={() => handleDeleteItem(item.id, item.quantity)}\r\n                  className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 transform hover:scale-105 transition\"\r\n                >\r\n                  Sell / Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}