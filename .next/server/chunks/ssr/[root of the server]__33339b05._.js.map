{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/redaj/my-next-website/src/app/scan/update/page.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Quagga from \"quagga\";\r\nimport { collection, getDocs, addDoc, updateDoc, doc } from \"firebase/firestore\";\r\nimport { db } from \"@/firebase/firebaseConfig\";\r\n\r\nconst ScanUpdatePage = () => {\r\n  const [barcode, setBarcode] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Quagga.init(\r\n      {\r\n        inputStream: { type: \"LiveStream\", constraints: { facingMode: \"environment\" } },\r\n        decoder: { readers: [\"ean_reader\", \"code_128_reader\"] },\r\n      },\r\n      (err) => {\r\n        if (err) {\r\n          console.error(\"Error initializing Quagga:\", err);\r\n          return;\r\n        }\r\n        Quagga.start();\r\n      }\r\n    );\r\n\r\n    Quagga.onDetected((data) => {\r\n      if (!scanned) {\r\n        setBarcode(data.codeResult.code);\r\n        setScanned(true);\r\n        Quagga.stop();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      Quagga.stop();\r\n    };\r\n  }, [scanned]);\r\n\r\n  const handleSaveProduct = async () => {\r\n    if (!barcode || !productName || quantity <= 0) {\r\n      alert(\"Please enter valid product details.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const productsRef = collection(db, \"inventory\");\r\n      const querySnapshot = await getDocs(productsRef);\r\n\r\n      let productExists = false;\r\n      querySnapshot.forEach((docSnapshot) => {\r\n        if (docSnapshot.data().barcode === barcode) {\r\n          const docRef = doc(db, \"inventory\", docSnapshot.id);\r\n          updateDoc(docRef, { quantity: docSnapshot.data().quantity + quantity });\r\n          productExists = true;\r\n        }\r\n      });\r\n\r\n      if (!productExists) {\r\n        await addDoc(productsRef, { barcode, productName, quantity });\r\n      }\r\n\r\n      alert(\"Product updated successfully!\");\r\n      setScanned(false);\r\n      setBarcode(\"\");\r\n      setProductName(\"\");\r\n      setQuantity(1);\r\n    } catch (error) {\r\n      console.error(\"Error updating inventory:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Scan & Update Product</h1>\r\n      <video id=\"barcode-scanner\" />\r\n      <p>Scanned Barcode: {barcode}</p>\r\n      <input type=\"text\" placeholder=\"Enter Product Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\r\n      <input type=\"number\" placeholder=\"Quantity\" value={quantity} onChange={(e) => setQuantity(Number(e.target.value))} />\r\n      <button onClick={handleSaveProduct}>Confirm & Save</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScanUpdatePage;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;AACA;AAJA;;;;;;AAMA,MAAM,iBAAiB;IACrB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uIAAA,CAAA,UAAM,CAAC,IAAI,CACT;YACE,aAAa;gBAAE,MAAM;gBAAc,aAAa;oBAAE,YAAY;gBAAc;YAAE;YAC9E,SAAS;gBAAE,SAAS;oBAAC;oBAAc;iBAAkB;YAAC;QACxD,GACA,CAAC;YACC,IAAI,KAAK;gBACP,QAAQ,KAAK,CAAC,8BAA8B;gBAC5C;YACF;YACA,uIAAA,CAAA,UAAM,CAAC,KAAK;QACd;QAGF,uIAAA,CAAA,UAAM,CAAC,UAAU,CAAC,CAAC;YACjB,IAAI,CAAC,SAAS;gBACZ,WAAW,KAAK,UAAU,CAAC,IAAI;gBAC/B,WAAW;gBACX,uIAAA,CAAA,UAAM,CAAC,IAAI;YACb;QACF;QAEA,OAAO;YACL,uIAAA,CAAA,UAAM,CAAC,IAAI;QACb;IACF,GAAG;QAAC;KAAQ;IAEZ,MAAM,oBAAoB;QACxB,IAAI,CAAC,WAAW,CAAC,eAAe,YAAY,GAAG;YAC7C,MAAM;YACN;QACF;QAEA,IAAI;YACF,MAAM,cAAc,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,iIAAA,CAAA,KAAE,EAAE;YACnC,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;YAEpC,IAAI,gBAAgB;YACpB,cAAc,OAAO,CAAC,CAAC;gBACrB,IAAI,YAAY,IAAI,GAAG,OAAO,KAAK,SAAS;oBAC1C,MAAM,SAAS,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,iIAAA,CAAA,KAAE,EAAE,aAAa,YAAY,EAAE;oBAClD,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,QAAQ;wBAAE,UAAU,YAAY,IAAI,GAAG,QAAQ,GAAG;oBAAS;oBACrE,gBAAgB;gBAClB;YACF;YAEA,IAAI,CAAC,eAAe;gBAClB,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,aAAa;oBAAE;oBAAS;oBAAa;gBAAS;YAC7D;YAEA,MAAM;YACN,WAAW;YACX,WAAW;YACX,eAAe;YACf,YAAY;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAM,IAAG;;;;;;0BACV,8OAAC;;oBAAE;oBAAkB;;;;;;;0BACrB,8OAAC;gBAAM,MAAK;gBAAO,aAAY;gBAAqB,OAAO;gBAAa,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;;;;;;0BACtH,8OAAC;gBAAM,MAAK;gBAAS,aAAY;gBAAW,OAAO;gBAAU,UAAU,CAAC,IAAM,YAAY,OAAO,EAAE,MAAM,CAAC,KAAK;;;;;;0BAC/G,8OAAC;gBAAO,SAAS;0BAAmB;;;;;;;;;;;;AAG1C;uCAEe","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}