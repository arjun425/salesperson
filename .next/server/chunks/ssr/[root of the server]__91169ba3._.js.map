{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/redaj/my-next-website/src/firebase/firebaseConfig.js"],"sourcesContent":["\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\n// Your Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBl2JppV838_TGQ7akVeCi_aubcvrAl9nw\",\r\n    authDomain: \"invenapp-a4191.firebaseapp.com\",\r\n    projectId: \"invenapp-a4191\",\r\n    storageBucket: \"invenapp-a4191.appspot.com\", // typically projectId.appspot.com\r\n    messagingSenderId: \"1061867595172\",\r\n    appId: \"1:1061867595172:web:527ad9b97eff34a621cd31\",\r\n    measurementId: \"G-SJXX8VGJGX\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\nconst database = getDatabase(app);\r\n\r\n// Export everything properly\r\nexport { app, db, auth, database, firebaseConfig };\r\n"],"names":[],"mappings":";;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,8BAA8B;AAC9B,MAAM,iBAAiB;IACnB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACnB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAC1B,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,WAAW,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/redaj/my-next-website/src/app/scan/update/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Quagga from \"quagga\";\r\nimport { collection, getDocs, addDoc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"@/firebase/firebaseConfig\"; // Ensure firebaseConfig.js exports { db }\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ScanUpdatePage = () => {\r\n  const [barcode, setBarcode] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [scanned, setScanned] = useState(false);\r\n  const [confirmVisible, setConfirmVisible] = useState(false);\r\n\r\n  // Initialize Quagga and listen for barcode detection.\r\n  useEffect(() => {\r\n    // Get the scanner container element by its ID.\r\n    const scannerContainer = document.getElementById(\"barcode-scanner-update\");\r\n    if (!scannerContainer) return;\r\n\r\n    // Initialize Quagga only if we haven't scanned yet.\r\n    if (!scanned) {\r\n      // Initialize Quagga with our configuration.\r\n      Quagga.init(\r\n        {\r\n          inputStream: {\r\n            type: \"LiveStream\",\r\n            target: scannerContainer, // Set the target to our container\r\n            constraints: {\r\n              width: 640,\r\n              height: 480,\r\n              facingMode: \"environment\", // Use rear camera\r\n            },\r\n          },\r\n          decoder: {\r\n            readers: [\"ean_reader\", \"code_128_reader\"],\r\n          },\r\n        },\r\n        (err) => {\r\n          if (err) {\r\n            console.error(\"Quagga init error:\", err);\r\n            toast.error(\"Error initializing scanner: \" + err.message);\r\n            return;\r\n          }\r\n          Quagga.start();\r\n        }\r\n      );\r\n\r\n      // Listen for detected barcodes.\r\n      Quagga.onDetected((data) => {\r\n        const detectedCode = data.codeResult.code;\r\n        if (!scanned) {\r\n          setBarcode(detectedCode);\r\n          setScanned(true);\r\n          Quagga.stop();\r\n          setConfirmVisible(true);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Cleanup function.\r\n    return () => {\r\n      if (Quagga && typeof Quagga.offDetected === \"function\") {\r\n        Quagga.offDetected();\r\n        Quagga.stop();\r\n      }\r\n    };\r\n  }, [scanned]);\r\n\r\n  const handleSaveProduct = async () => {\r\n    if (!barcode || !productName || quantity <= 0) {\r\n      toast.error(\"Please enter valid product details.\");\r\n      return;\r\n    }\r\n    try {\r\n      // Reference to the \"inventory\" collection.\r\n      const productsRef = collection(db, \"inventory\");\r\n      // Query existing products to see if this barcode already exists.\r\n      const querySnapshot = await getDocs(productsRef);\r\n\r\n      let productExists = false;\r\n      querySnapshot.forEach((docSnapshot) => {\r\n        const data = docSnapshot.data();\r\n        if (data.barcode === barcode) {\r\n          // Use the document reference to update quantity.\r\n          updateDoc(docSnapshot.ref, { quantity: data.quantity + quantity });\r\n          productExists = true;\r\n        }\r\n      });\r\n\r\n      if (!productExists) {\r\n        await addDoc(productsRef, { barcode, productName, quantity });\r\n      }\r\n\r\n      toast.success(\"Product updated successfully!\");\r\n      // Reset states for next scan.\r\n      setBarcode(\"\");\r\n      setProductName(\"\");\r\n      setQuantity(1);\r\n      setScanned(false);\r\n      setConfirmVisible(false);\r\n      // Restart scanning.\r\n      Quagga.start();\r\n    } catch (error) {\r\n      console.error(\"Error updating inventory:\", error);\r\n      toast.error(\"Error updating inventory: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center p-4 bg-gray-50\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Scan for Update</h1>\r\n      <div id=\"barcode-scanner-update\" className=\"w-80 h-60 bg-black mb-4\" />\r\n      {barcode && <p>Scanned Barcode: {barcode}</p>}\r\n      {confirmVisible && (\r\n        <div className=\"flex flex-col gap-2 mt-4 w-80\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Product Name\"\r\n            value={productName}\r\n            onChange={(e) => setProductName(e.target.value)}\r\n            className=\"p-2 border rounded\"\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Enter Quantity\"\r\n            value={quantity}\r\n            onChange={(e) => setQuantity(Number(e.target.value))}\r\n            className=\"p-2 border rounded\"\r\n          />\r\n          <button\r\n            onClick={handleSaveProduct}\r\n            className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition transform hover:scale-105\"\r\n          >\r\n            Confirm & Save\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScanUpdatePage;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}