{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/redaj/my-next-website/src/app/scan/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Quagga from \"quagga\";\r\nimport { getDatabase, ref, set } from \"firebase/database\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { firebaseConfig } from \"../firebase/firebaseConfig\";\r\n // Adjust the import path if needed\r\n\r\n// Initialize Firebase and get a reference to the Realtime Database.\r\ninitializeApp(firebaseConfig);\r\nconst db = getDatabase();\r\n\r\nexport default function ScanPage() {\r\n  const [barcode, setBarcode] = useState(null);\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!scanned) {\r\n      Quagga.init(\r\n        {\r\n          inputStream: {\r\n            type: \"LiveStream\",\r\n            constraints: {\r\n              width: 640,\r\n              height: 480,\r\n              facingMode: \"environment\",\r\n            },\r\n          },\r\n          decoder: { readers: [\"ean_reader\", \"upc_reader\"] },\r\n        },\r\n        (err) => {\r\n          if (err) {\r\n            console.error(\"Error initializing scanner:\", err);\r\n            return;\r\n          }\r\n          Quagga.start();\r\n        }\r\n      );\r\n\r\n      Quagga.onDetected((data) => {\r\n        if (!scanned) {\r\n          setBarcode(data.codeResult.code);\r\n          setScanned(true);\r\n          Quagga.stop();\r\n        }\r\n      });\r\n    }\r\n  }, [scanned]);\r\n\r\n  const handleConfirm = async () => {\r\n    if (!barcode || !productName) {\r\n      alert(\"Both barcode and product name are required!\");\r\n      return;\r\n    }\r\n    try {\r\n      const productRef = ref(db, `inventory/${barcode}`);\r\n      console.log(\"Saving product:\", { barcode, name: productName });\r\n      await set(productRef, { barcode, name: productName });\r\n      alert(`Product \"${productName}\" saved successfully!`);\r\n      setBarcode(null);\r\n      setProductName(\"\");\r\n      setScanned(false);\r\n      Quagga.start();\r\n    } catch (error) {\r\n      console.error(\"Error saving product:\", error);\r\n      alert(\"Failed to save product.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center p-4 bg-gray-50\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Scan Product</h1>\r\n      {barcode ? (\r\n        <div>\r\n          <p>Scanned Barcode: {barcode}</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Product Name\"\r\n            value={productName}\r\n            onChange={(e) => setProductName(e.target.value)}\r\n            className=\"p-2 border rounded\"\r\n          />\r\n          <button\r\n            onClick={handleConfirm}\r\n            className=\"mt-2 bg-blue-500 text-white py-2 px-4 rounded\"\r\n          >\r\n            Confirm\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <p>No barcode detected yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;;;;;;;;AALA;;;;;;AAOC,mCAAmC;AAEpC,oEAAoE;AACpE,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AACd,MAAM,KAAK,CAAA,GAAA,qKAAA,CAAA,cAAW,AAAD;AAEN,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,IAAI,CAAC,SAAS;gBACZ,kJAAA,CAAA,UAAM,CAAC,IAAI,CACT;oBACE,aAAa;wBACX,MAAM;wBACN,aAAa;4BACX,OAAO;4BACP,QAAQ;4BACR,YAAY;wBACd;oBACF;oBACA,SAAS;wBAAE,SAAS;4BAAC;4BAAc;yBAAa;oBAAC;gBACnD;0CACA,CAAC;wBACC,IAAI,KAAK;4BACP,QAAQ,KAAK,CAAC,+BAA+B;4BAC7C;wBACF;wBACA,kJAAA,CAAA,UAAM,CAAC,KAAK;oBACd;;gBAGF,kJAAA,CAAA,UAAM,CAAC,UAAU;0CAAC,CAAC;wBACjB,IAAI,CAAC,SAAS;4BACZ,WAAW,KAAK,UAAU,CAAC,IAAI;4BAC/B,WAAW;4BACX,kJAAA,CAAA,UAAM,CAAC,IAAI;wBACb;oBACF;;YACF;QACF;6BAAG;QAAC;KAAQ;IAEZ,MAAM,gBAAgB;QACpB,IAAI,CAAC,WAAW,CAAC,aAAa;YAC5B,MAAM;YACN;QACF;QACA,IAAI;YACF,MAAM,aAAa,CAAA,GAAA,qKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,CAAC,UAAU,EAAE,SAAS;YACjD,QAAQ,GAAG,CAAC,mBAAmB;gBAAE;gBAAS,MAAM;YAAY;YAC5D,MAAM,CAAA,GAAA,qKAAA,CAAA,MAAG,AAAD,EAAE,YAAY;gBAAE;gBAAS,MAAM;YAAY;YACnD,MAAM,CAAC,SAAS,EAAE,YAAY,qBAAqB,CAAC;YACpD,WAAW;YACX,eAAe;YACf,WAAW;YACX,kJAAA,CAAA,UAAM,CAAC,KAAK;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACR;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;YACvC,wBACC,6LAAC;;kCACC,6LAAC;;4BAAE;4BAAkB;;;;;;;kCACrB,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wBAC9C,WAAU;;;;;;kCAEZ,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;qCAKH,6LAAC;0BAAE;;;;;;;;;;;;AAIX;GAnFwB;KAAA","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}