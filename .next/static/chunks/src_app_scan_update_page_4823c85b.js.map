{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/redaj/my-next-website/src/app/scan/update/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Quagga from \"quagga\";\r\nimport { collection, getDocs, addDoc, updateDoc, doc } from \"firebase/firestore\";\r\nimport { db } from \"@/firebase/firebase\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ScanUpdatePage = () => {\r\n  const [barcode, setBarcode] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\"); // When saved, productName is stored in all caps\r\n  const [pricePerUnit, setPricePerUnit] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [scanned, setScanned] = useState(false);\r\n  const [confirmVisible, setConfirmVisible] = useState(false);\r\n  const [existingProduct, setExistingProduct] = useState(null);\r\n\r\n  // Override console.error to suppress errors that include \"reading 'data'\"\r\n  useEffect(() => {\r\n    const originalConsoleError = console.error;\r\n    console.error = (...args) => {\r\n      if (\r\n        args[0] &&\r\n        typeof args[0] === \"string\" &&\r\n        args[0].includes(\"reading 'data'\")\r\n      ) {\r\n        return;\r\n      }\r\n      originalConsoleError(...args);\r\n    };\r\n    return () => {\r\n      console.error = originalConsoleError;\r\n    };\r\n  }, []);\r\n\r\n  // Global error handler as an extra layer.\r\n  useEffect(() => {\r\n    const handleGlobalError = (event) => {\r\n      if (\r\n        event.error &&\r\n        event.error.message &&\r\n        event.error.message.includes(\"reading 'data'\")\r\n      ) {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"error\", handleGlobalError);\r\n    return () => {\r\n      window.removeEventListener(\"error\", handleGlobalError);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const scannerContainer = document.getElementById(\"barcode-scanner-update\");\r\n    if (!scannerContainer) return;\r\n\r\n    if (!scanned) {\r\n      Quagga.init(\r\n        {\r\n          inputStream: {\r\n            type: \"LiveStream\",\r\n            target: scannerContainer,\r\n            constraints: {\r\n              width: 640,\r\n              height: 480,\r\n              facingMode: \"environment\",\r\n            },\r\n          },\r\n          decoder: {\r\n            readers: [\"ean_reader\", \"code_128_reader\"],\r\n          },\r\n        },\r\n        (err) => {\r\n          if (err) {\r\n            console.error(\"Error initializing Quagga:\", err);\r\n            toast.error(\"Error initializing scanner: \" + err.message);\r\n            return;\r\n          }\r\n          Quagga.start();\r\n        }\r\n      );\r\n\r\n      Quagga.onDetected(async (result) => {\r\n        try {\r\n          const detectedCode = result.codeResult.code;\r\n          if (!scanned) {\r\n            setBarcode(detectedCode);\r\n            setScanned(true);\r\n            Quagga.stop();\r\n            // Check if product already exists in Firestore.\r\n            const productsRef = collection(db, \"inventory\");\r\n            try {\r\n              const querySnapshot = await getDocs(productsRef);\r\n              let foundProduct = null;\r\n              for (const docSnapshot of querySnapshot.docs) {\r\n                if (!docSnapshot) continue; // Defensive check\r\n                const data = docSnapshot.data();\r\n                if (data && data.barcode === detectedCode) {\r\n                  // Store the document id along with the data.\r\n                  foundProduct = { id: docSnapshot.id, ...data };\r\n                  break;\r\n                }\r\n              }\r\n              if (foundProduct) {\r\n                setExistingProduct(foundProduct);\r\n                setProductName(foundProduct.productName || \"\");\r\n                setPricePerUnit(foundProduct[\"price per unit\"]?.toString() || \"\");\r\n              } else {\r\n                setExistingProduct(null);\r\n                setProductName(\"\");\r\n                setPricePerUnit(\"\");\r\n              }\r\n            } catch (error) {\r\n              toast.error(\"Error checking product: \" + error.message);\r\n            }\r\n            setConfirmVisible(true);\r\n          }\r\n        } catch (error) {\r\n          console.warn(\"Benign error in onDetected handler:\", error);\r\n        }\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      try {\r\n        if (Quagga && typeof Quagga.offDetected === \"function\") {\r\n          Quagga.offDetected();\r\n          Quagga.stop();\r\n        }\r\n      } catch (error) {\r\n        console.warn(\"Error during Quagga cleanup:\", error);\r\n      }\r\n    };\r\n  }, [scanned]);\r\n\r\n  const handleSaveProduct = async () => {\r\n    if (!barcode) {\r\n      toast.error(\"Barcode is missing. Please scan again.\");\r\n      return;\r\n    }\r\n    if (!existingProduct) {\r\n      if (\r\n        !productName.trim() ||\r\n        !pricePerUnit.toString().trim() ||\r\n        quantity <= 0\r\n      ) {\r\n        toast.error(\r\n          \"Please enter valid product details (name, price per unit, and quantity).\"\r\n        );\r\n        return;\r\n      }\r\n    } else {\r\n      if (quantity <= 0) {\r\n        toast.error(\"Please enter a valid quantity.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      const productsRef = collection(db, \"inventory\");\r\n      if (existingProduct) {\r\n        if (!existingProduct.id) {\r\n          toast.error(\"Error: Existing product has no valid ID.\");\r\n          return;\r\n        }\r\n        console.log(\"Updating product:\", existingProduct);\r\n        const newQuantity = (existingProduct.quantity || 0) + quantity;\r\n        await updateDoc(doc(db, \"inventory\", existingProduct.id), {\r\n          quantity: newQuantity,\r\n        });\r\n        toast.success(\"Product quantity updated successfully!\");\r\n      } else {\r\n        await addDoc(productsRef, {\r\n          barcode,\r\n          productName: productName.toUpperCase(), // Convert to all caps here\r\n          \"price per unit\": parseFloat(pricePerUnit),\r\n          quantity,\r\n        });\r\n        toast.success(\"New product added successfully!\");\r\n      }\r\n      // Reset state for the next scan.\r\n      setBarcode(\"\");\r\n      setProductName(\"\");\r\n      setPricePerUnit(\"\");\r\n      setQuantity(1);\r\n      setScanned(false);\r\n      setConfirmVisible(false);\r\n      setExistingProduct(null);\r\n      try {\r\n        Quagga.start();\r\n      } catch (e) {\r\n        if (e && e.message && e.message.includes(\"reading 'data'\")) {\r\n          // Suppress this error.\r\n        } else {\r\n          console.error(e);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating inventory:\", error);\r\n      toast.error(\"Error updating inventory: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen\" style={{ fontFamily: \"Arvo\" }}>\r\n      {/* Header Section */}\r\n      <header className=\"bg-blue-700 text-white py-4 px-6 flex items-center\">\r\n        <img\r\n          src=\"/logo.ico\"\r\n          alt=\"Logo\"\r\n          className=\"w-10 h-10 mr-4 object-contain\"\r\n        />\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold uppercase\">ShopKeeper</h1>\r\n          <p className=\"text-sm\">You are updating your inventory</p>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Body Section */}\r\n      <main className=\"bg-white-500 flex flex-col items-center py-10\">\r\n        <div\r\n          className=\"mb-8\"\r\n          id=\"barcode-scanner-update\"\r\n          style={{ width: 320, height: 240, backgroundColor: \"#000\" }}\r\n        ></div>\r\n        {barcode && <p className=\"mb-4 text-lg\">Scanned Barcode: {barcode}</p>}\r\n        {confirmVisible && (\r\n          <div className=\"flex flex-col gap-3 w-80 bg-white p-4 rounded shadow\">\r\n            {existingProduct ? (\r\n              <>\r\n                <p className=\"text-lg\">Product Name: {productName}</p>\r\n                <p className=\"text-lg\">Price Per Unit: {pricePerUnit}</p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Product Name\"\r\n                  value={productName}\r\n                  onChange={(e) => setProductName(e.target.value)}\r\n                  className=\"p-2 border rounded\"\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Enter Price Per Unit\"\r\n                  value={pricePerUnit}\r\n                  onChange={(e) => setPricePerUnit(e.target.value)}\r\n                  className=\"p-2 border rounded\"\r\n                />\r\n              </>\r\n            )}\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Enter Quantity\"\r\n              value={quantity}\r\n              onChange={(e) => setQuantity(Number(e.target.value))}\r\n              className=\"p-2 border rounded\"\r\n            />\r\n            <button\r\n              onClick={handleSaveProduct}\r\n              className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition transform hover:scale-105\"\r\n            >\r\n              Confirm & Save\r\n            </button>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScanUpdatePage;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}